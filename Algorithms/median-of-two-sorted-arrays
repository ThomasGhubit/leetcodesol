class Solution {
    public double findMedianSortedArrays(int[] A, int[] B) {
        int la = A.length, lb = B.length;
        if (la > lb) {
            int[] temp = A; A = B; B = temp;
            int tem = la; la = lb; lb = tem;
        }
        int min = 0, max = la, half = (la + lb + 1)/2;
        while (min <= max) {
            int i = (min + max)/2;
            int j = half - i;
            if (i < max && B[j - 1] > A[i]) min++;
            else if (i > min && B[j] < A[i - 1]) max--;
            else {
                int leftMax = 0;
                if (i == 0) leftMax = B[j - 1];
                else if (j == 0) leftMax = A[i - 1];
                else leftMax = Math.max(A[i - 1], B[j - 1]);
                if ((la + lb) % 2 == 1) return leftMax;
                int rightMin = 0;
                if (i == la) rightMin = B[j];
                else if (j == lb) rightMin = A[i];
                else rightMin = Math.min(A[i], B[j]);
                return (leftMax + rightMin) / 2.0;
            }
        }
        return 0.0;
    }
}
