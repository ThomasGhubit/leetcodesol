/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new LinkedList<>();
        List<Integer> list = new LinkedList<>();
        dfs(root, sum, list, res);
        return res;
    }
    
    private void dfs(TreeNode root, int sum, List<Integer> list, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        list.add(root.val);
        if (root.left == null && root.right == null && root.val == sum) {
            res.add(new LinkedList<>(list));
            list.remove(list.size() - 1);
            return;
        }
        else {
            dfs(root.left, sum - root.val, list, res);
            dfs(root.right, sum - root.val, list, res);
        }
        list.remove(list.size() - 1);
    }
}
